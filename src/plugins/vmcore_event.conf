# analyze
EVENT=analyze_VMcore analyzer=vmcore
        # If kdump machinery already extracted dmesg...
        if test -f vmcore-dmesg.txt; then
            # ...use that
            abrt-dump-oops -o vmcore-dmesg.txt >backtrace || exit $?
            #
            # Does "kernel" element exist?
            test -f kernel && exit 0
            #
            # Try creating it from vmcore-dmesg.txt:
            # MCE oopses don't have kernel version in them,
            # but it should be specified earlier in the log.
            k=`sed -n '/Linux version/ s/.*Linux version \([^ ]*\) .*/\1/p' vmcore-dmesg.txt | tail -n1`
            test "$k" != "" && printf "%s" "$k" >kernel
        else
            # No vmcore-dmesg.txt, do it the hard way:
            abrt-action-analyze-vmcore
        fi &&
        abrt-action-analyze-oops &&
        abrt-action-save-kernel-data

# If you want behavior similar to one provided by kerneloops daemon
# distributed by kerneloops.org - that is, if you want
# oopses to be reported automatically and immediately without
# user interaction, uncomment this line:
#EVENT=post-create analyzer=vmcore
        reporter-kerneloops

# report
EVENT=report_Kerneloops analyzer=vmcore
        reporter-kerneloops

EVENT=report_Bugzilla analyzer=vmcore
        reporter-bugzilla -b \
                -F /etc/libreport/plugins/bugzilla_format_kernel.conf

# update ABRT database after successful report to bugzilla
EVENT=post_report analyzer=vmcore
        reporter-ureport -A -B

# Send micro report
EVENT=report_uReport analyzer=vmcore
        /usr/libexec/abrt-action-ureport

EVENT=report-gui analyzer=vmcore
    report-gtk -- "$DUMP_DIR"

EVENT=report-cli analyzer=vmcore
    report-cli -- "$DUMP_DIR"
