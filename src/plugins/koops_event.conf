# Analyze
EVENT=post-create analyzer=Kerneloops
        # >> instead of > is due to bugzilla.redhat.com/show_bug.cgi?id=854266
        abrt-action-analyze-oops &&
        dmesg >>dmesg &&
        abrt-action-save-kernel-data
        abrt-action-save-kernel-data || exit $?
        #
        # If it exists, we can save a copy of MCE log here:
        #test -f /var/log/mcelog && cp /var/log/mcelog .
        # but in current config, sosreport already does that.
        #
        # See if MCEs were seen but mcelog isn't installed or running
        grep -qFi 'Machine check events logged' dmesg || exit 0
        #
        # There was an MCE. IOW: it's not a bug, it's a HW error.
        # Did mcelog logged it to /var/log/mcelog
        # (RHEL6 by default does this)?
        test -f /var/log/mcelog &&
        {
                # (Ab)use user comment field to inform user about it.
                echo "The kernel log indicates that hardware errors were detected."
                echo "/var/log/mcelog file may have more information."
                echo "The last 20 lines of /var/log/mcelog are:"
                echo "========================================="
                # Redirecting sterr in case selinux makes it unreadable
                # (annoying anyway, but at least user knows what's going on):
                tail -n20 /var/log/mcelog 2>&1
                exit 0
        } >comment
        #
        # On RHEL7, mcelog is run so that its output ends up in syslog.
        # Do we see that?
        grep -qFi 'mcelog: Hardware event' /var/log/messages &&
        {
                echo "The kernel log indicates that hardware errors were detected."
                echo "System log may have more information."
                echo "The last 20 mcelog lines of system log are:"
                echo "========================================="
                # Redirecting sterr in case selinux makes it unreadable
                # (annoying anyway, but at least user knows what's going on):
                grep -Fi 'mcelog:' /var/log/messages | tail -n20 2>&1
                exit 0
        } >comment
        #
        # Apparently, there is no running mcelog daemon!
        # Let user know that he needs one.
        {
        echo "The kernel log indicates that hardware errors were detected."
        echo "The data was saved by kernel for processing by the mcelog tool."
        echo "However, neither /var/log/mcelog nor system log contain mcelog messages."
        echo "Most likely reason is that mcelog is not installed or not configured"
        echo "to be started during boot."
        echo "Without this tool running, the binary data saved by kernel"
        echo "is of limited usefulness."
        echo "(You can save this data anyway by running 'cat </dev/mcelog >FILE')."
        echo "The recommended course of action is to install mcelog."
        echo "If another hardware error would occur, a user-readable description"
        echo "of it will be saved in system log or /var/log/mcelog."
        } >comment

# If you want behavior similar to one provided by kerneloops daemon
# distributed by kerneloops.org - that is, if you want
# oopses to be reported automatically and immediately without
# user interaction, uncomment this line:
#EVENT=post-create analyzer=Kerneloops
        reporter-kerneloops

# Report
#EVENT=report_Kerneloops analyzer=Kerneloops
        reporter-kerneloops

EVENT=report_Bugzilla analyzer=Kerneloops
        reporter-bugzilla -b \
                -F /etc/libreport/plugins/bugzilla_format_kernel.conf

# Send micro report
EVENT=report_uReport analyzer=Kerneloops
        /usr/libexec/abrt-action-ureport

# Update ABRT database after successful report to bugzilla
EVENT=post_report analyzer=Kerneloops
        reporter-ureport -A -B

# Automatic/simple GUI-based kernel oopses reporting will do this:
EVENT=report-gui analyzer=Kerneloops
        report-gtk -- "$DUMP_DIR"

EVENT=report-cli analyzer=Kerneloops
        report-cli -- "$DUMP_DIR"
